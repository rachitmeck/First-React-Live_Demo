{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","grocery","setGrocery","count","setCount","tasklist","setTaskList","className","style","backgroundColor","onSubmit","e","preventDefault","taskDetails","id","Math","floor","random","value","vount","isCompleted","type","placeholder","onChange","event","target","color","duration","easing","map","t","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAgGeA,MA5Ff,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,OAImBJ,mBAAS,IAJ5B,mBAINK,EAJM,KAIIC,EAJJ,KAsBb,OACE,qCACE,qBACEC,UAAU,qBACVC,MAAO,CAAEC,gBAAiB,WAF5B,SAIE,qBAAKF,UAAU,YAAf,SACE,oBAAIA,UAAU,yCAAd,iCAKJ,uBACA,qBAAKA,UAAU,YAAYC,MAAO,CAAEC,gBAAiB,WAArD,SACE,qBAAKF,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,iCACE,uBAAMG,SAjCI,SAACC,GAErB,GADAA,EAAEC,iBACc,KAAZX,EAAgB,CAClB,IAAMY,EAAc,CAClBC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,MAAOjB,EACPkB,MAAOhB,EACPiB,aAAa,GAGfd,EAAY,GAAD,mBAAKD,GAAL,CAAeQ,KAE5BT,EAAS,IACTF,EAAW,KAoBD,UACE,sBAAKK,UAAU,aAAf,UACE,mDACA,uBACEc,KAAK,OACLd,UAAU,eACVe,YAAY,kBACZJ,MAAOjB,EACPsB,SAAU,SAACC,GAAD,OAAWtB,EAAWsB,EAAMC,OAAOP,UAE/C,oDACA,uBACEG,KAAK,OACLd,UAAU,eACVe,YAAY,kBACZJ,MAAOf,EACPoB,SAAU,SAACC,GAAD,OAAWpB,EAASoB,EAAMC,OAAOP,UAE7C,uBAAOX,UAAU,uBAAjB,0DAIF,wBACEc,KAAK,SACLd,UAAU,UACVC,MAAO,CAAEC,gBAAiB,UAAWiB,MAAM,SAH7C,4BAaV,uBACA,qBAAKnB,UAAU,YAAf,SAEE,cAAC,IAAD,CAAUoB,SAAU,IAAKC,OAAO,cAAhC,SACGvB,EAASwB,KAAI,SAACC,GAAD,OACZ,qBAAMvB,UAAU,sCAAsCC,MAAO,CAAEuB,SAAU,SAAzE,SACE,sBAAKxB,UAAU,gBAAgBC,MAAO,CAACC,gBAAiB,UAAWiB,MAAM,SAAzE,UACE,oBAAInB,UAAU,oBAAd,SAAmCuB,EAAEZ,QACrC,mBAAGX,UAAU,kBAAb,SAAgCuB,EAAEX,YAHkDW,EAAEhB,eCvEvFkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa1a3094.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport FlipMove from \"react-flip-move\";\n\nfunction App() {\n  const [grocery, setGrocery] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n\n  const [tasklist, setTaskList] = useState([]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (grocery !== \"\") {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        value: grocery,\n        vount: count,\n        isCompleted: false,\n      };\n\n      setTaskList([...tasklist, taskDetails]);\n    }\n    setCount(\"\");\n    setGrocery(\"\");\n  };\n\n  return (\n    <>\n      <nav\n        className=\"navbar navbar-dark\"\n        style={{ backgroundColor: \"#605ca8\" }}\n      >\n        <div className=\"container\">\n          <h2 className=\"navbar-brand mx-auto font-weight-light\">\n            GROCERY MANAGER\n          </h2>\n        </div>\n      </nav>\n      <br />\n      <div className=\"container\" style={{ backgroundColor: \"#75bee9\" }}>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <header>\n              <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                  <label>Name Groceries</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Groceries\"\n                    value={grocery}\n                    onChange={(event) => setGrocery(event.target.value)}\n                  />\n                  <label>Count Groceries</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Count Groceries\"\n                    value={count}\n                    onChange={(event) => setCount(event.target.value)}\n                  />\n                  <small className=\"form-text text-muted\">\n                    Enter your groseries that your wife told.\n                  </small>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn\"\n                  style={{ backgroundColor: \"#4268b1\", color:\"white\" }}\n                >\n                  Add\n                </button>\n              </form>\n            </header>\n          </div>\n        </div>\n      </div>\n\n      <br />\n      <div className=\"container\">\n        \n        <FlipMove duration={300} easing=\"ease-in-out\">\n          {tasklist.map((t) => (\n            <div  className=\"card bg-light mb-3 pd-4 row mx-auto\" style={{ maxWidth: \"18rem\"}} key={t.id}>\n              <div className=\"card-body row\" style={{backgroundColor: \"#75bee9\", color:\"white\"  }}>\n                <h5 className=\"card-title col-10\">{t.value}</h5>\n                <p className=\"card-text col-9\">{t.vount}</p>\n              </div>\n            </div>\n          ))}\n        </FlipMove>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}